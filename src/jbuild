(jbuild_version 1)

(alias
    ((name local)
     (action
        (progn
            (bash "mkdir -p ${SCOPE_ROOT}/../../_bin")
            (bash "ln -srf ${bin:lig-record} ${SCOPE_ROOT}/../../_bin/lig-record")
            (bash "ln -srf ${bin:lig-infer} ${SCOPE_ROOT}/../../_bin/lig-infer")
            (bash "ln -srf ${bin:lig-verify} ${SCOPE_ROOT}/../../_bin/lig-verify")))))

(alias
    ((name optimize)
     (action
        (progn
            (bash "echo -ne 'Current build mode is set to [optimize].\nNote that build may take significantly longer!\nUse (jbuilder build -f @fast-compile) to switch to [fast-compile] mode.'")
            (bash "echo -ne '(-linkall -O3 -rounds 13)' > ${SCOPE_ROOT}/../../src/flambda_flags")))))

(alias
    ((name fast-compile)
     (action
        (progn
            (bash "echo -ne 'Current build mode is set to [fast-compile].\nUse (jbuilder build -f @optimize) to generate highly optimized binaries.'")
            (bash "echo -ne '()' > ${SCOPE_ROOT}/../../src/flambda_flags")))))

(rule
    ((targets (flambda_flags))
     (deps ((alias fast)))
     (mode fallback)
     (action
        (bash "cp ${SCOPE_ROOT}/../../src/flambda_flags ."))))

(alias
    ((name clean)
     (action
        (bash "rm -rf ${SCOPE_ROOT}/../../src/flambda_flags ${SCOPE_ROOT}/../../_bin"))))

(executables
    ((names (Record Infer Verify))
     (public_names (lig-record lig-infer lig-verify))
     (ocamlopt_flags (:standard (:include flambda_flags)))
     (libraries (core core_extended))))