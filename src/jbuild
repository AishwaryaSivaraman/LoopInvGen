(jbuild_version 1)

(alias
    ((name optimize)
     (deps ((universe)))
     (action
        (progn
            (bash "echo -ne 'Current build mode is set to [optimize].\nNote that build may take significantly (2x) longer!\nUse (jbuilder build @debug) to switch to [debug] mode instead.'")
            (bash "echo -ne '; AUTO-GENERATED. Any changes to this file would be OVERWRITTEN.\n\n(-O3 -rounds 5)' > ${SCOPE_ROOT}/../../src/.flambda_flags")
            (bash "echo -ne '// AUTO-GENERATED. Any changes to this file would be OVERWRITTEN.\n\n#define LOGGING 0' > ${SCOPE_ROOT}/../../src/config.h")))))

(alias
    ((name debug)
     (deps ((universe)))
     (action
        (progn
            (bash "echo -ne 'Current build mode is set to [debug].\nUse (jbuilder build @optimize) to generate optimized binaries instead.'")
            (bash "echo -ne '; AUTO-GENERATED. Any changes to this file would be OVERWRITTEN.\n\n(-Oclassic)' > ${SCOPE_ROOT}/../../src/.flambda_flags")
            (bash "echo -ne '// AUTO-GENERATED. Any changes to this file would be OVERWRITTEN.\n\n#define LOGGING 1' > ${SCOPE_ROOT}/../../src/config.h")))))

(rule
    ((targets (.flambda_flags))
     (deps ((alias optimize)))
     (mode fallback)
     (action
        (bash "cp ${SCOPE_ROOT}/../../src/.flambda_flags ."))))

(rule
    ((targets (config.h))
     (deps ((alias optimize)))
     (mode fallback)
     (action
        (bash "cp ${SCOPE_ROOT}/../../src/config.h ."))))

(alias
    ((name clean)
     (action
        (bash "rm -rf ${SCOPE_ROOT}/../../src/.flambda_flags ${SCOPE_ROOT}/../../src/config.h"))))

(executables
    ((names (Process Record Infer Verify))
     (public_names (lig-process lig-record lig-infer lig-verify))
     (ocamlopt_flags (:standard (:include .flambda_flags)))
     (libraries (core core_extended))
     (preprocessor_deps ((file config.h)))
     (preprocess (pps (ppx_optcomp)))))